name: Notify Merge On Master
run-name: Notify Merge On Master

on:
  pull_request:
    types:
      - closed

    branches:
      - master
      - main

permissions:
  contents: write
  pull-requests: read

jobs:
  create-tagged-release:
    name: Notify PR Merge On Master
    runs-on: ubuntu-latest

    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0  # Fetch all history for the PR branch

      - name: Get first commit in PR
        id: first_commit_date
        run: |
          # Get the PR number
          pr_number=${{ github.event.pull_request.number }}
          # Use GitHub API to fetch the commits from the PR
          commits=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$pr_number/commits")
          # Get the first commit in the PR
          first_commit=$(echo "$commits" | jq -r '.[0].sha')
          first_commit_date=$(echo "$commits" | jq -r '.[0].commit.author.date')
          echo "First commit in PR: $first_commit_date"
          echo "::set-output name=date::$first_commit_date"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Calculate age
        id: calculate_age
        run: |
          first_commit_date="${{ steps.first_commit_date.outputs.date }}"
          current_date=$(date -u +"%Y-%m-%d %H:%M:%S")
          first_commit_seconds=$(date -d "$first_commit_date" +%s)
          current_seconds=$(date -d "$current_date" +%s)
          age=$(( ((current_seconds - first_commit_seconds) / 86400 )+1))
          echo "First commit age: $age days"
          echo "::set-output name=age::$age"

      - name: Print age
        run: |
          echo "The first commit in this PR is ${{ steps.calculate_age.outputs.age }} days old"
